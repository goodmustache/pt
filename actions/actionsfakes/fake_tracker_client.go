// This file was generated by counterfeiter
package actionsfakes

import (
	"sync"

	"github.com/goodmustache/pt/actions"
	"github.com/goodmustache/pt/tracker"
)

type FakeTrackerClient struct {
	TokenInformationStub        func() (tracker.TokenInformation, error)
	tokenInformationMutex       sync.RWMutex
	tokenInformationArgsForCall []struct{}
	tokenInformationReturns     struct {
		result1 tracker.TokenInformation
		result2 error
	}
}

func (fake *FakeTrackerClient) TokenInformation() (tracker.TokenInformation, error) {
	fake.tokenInformationMutex.Lock()
	fake.tokenInformationArgsForCall = append(fake.tokenInformationArgsForCall, struct{}{})
	fake.tokenInformationMutex.Unlock()
	if fake.TokenInformationStub != nil {
		return fake.TokenInformationStub()
	} else {
		return fake.tokenInformationReturns.result1, fake.tokenInformationReturns.result2
	}
}

func (fake *FakeTrackerClient) TokenInformationCallCount() int {
	fake.tokenInformationMutex.RLock()
	defer fake.tokenInformationMutex.RUnlock()
	return len(fake.tokenInformationArgsForCall)
}

func (fake *FakeTrackerClient) TokenInformationReturns(result1 tracker.TokenInformation, result2 error) {
	fake.TokenInformationStub = nil
	fake.tokenInformationReturns = struct {
		result1 tracker.TokenInformation
		result2 error
	}{result1, result2}
}

var _ actions.TrackerClient = new(FakeTrackerClient)
