// This file was generated by counterfeiter
package actionsfakes

import (
	"sync"

	"github.com/goodmustache/pt/actions"
	"github.com/goodmustache/pt/tracker"
)

type FakeTrackerClient struct {
	TokenInfoStub        func() (tracker.TokenInfomation, error)
	tokenInfoMutex       sync.RWMutex
	tokenInfoArgsForCall []struct{}
	tokenInfoReturns     struct {
		result1 tracker.TokenInfomation
		result2 error
	}
}

func (fake *FakeTrackerClient) TokenInfo() (tracker.TokenInfomation, error) {
	fake.tokenInfoMutex.Lock()
	fake.tokenInfoArgsForCall = append(fake.tokenInfoArgsForCall, struct{}{})
	fake.tokenInfoMutex.Unlock()
	if fake.TokenInfoStub != nil {
		return fake.TokenInfoStub()
	} else {
		return fake.tokenInfoReturns.result1, fake.tokenInfoReturns.result2
	}
}

func (fake *FakeTrackerClient) TokenInfoCallCount() int {
	fake.tokenInfoMutex.RLock()
	defer fake.tokenInfoMutex.RUnlock()
	return len(fake.tokenInfoArgsForCall)
}

func (fake *FakeTrackerClient) TokenInfoReturns(result1 tracker.TokenInfomation, result2 error) {
	fake.TokenInfoStub = nil
	fake.tokenInfoReturns = struct {
		result1 tracker.TokenInfomation
		result2 error
	}{result1, result2}
}

var _ actions.TrackerClient = new(FakeTrackerClient)
